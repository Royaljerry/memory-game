// Responsive

@mixin respondFrom($minWidth, $forcePortrait: false) {
  @if $forcePortrait {
    @media (min-width: $minWidth) and (orientation: portrait) {
      @content;
    }
  } @else {
    @media (min-width: $minWidth) {
      @content;
    }
  }
}

@mixin respondFontSizeFrom($minWidth, $fontSize) {
  @media (min-width: $minWidth) {
    font-size: $fontSize;
    @content;
  }
}

@mixin landscapeModeForIphoneX() {
  @media screen and (orientation: landscape) {
    padding-left: calc(#{$metrics__unit-base--M} + env(safe-area-inset-left));
    padding-right: calc(#{$metrics__unit-base--M} + env(safe-area-inset-right));
    margin-left: auto;
    margin-right: auto;
  }
}

@mixin positionGridItem($rowStart, $columnStart, $rowEnd: $rowStart, $columnEnd: $columnStart) {
  grid-row-start: $rowStart;
  grid-row-end: $rowEnd;
  grid-column-start: $columnStart;
  grid-column-end: $columnEnd;
}

@mixin repositionGridItem($rowStart, $columnStart, $rowEnd: $rowStart, $columnEnd: $columnStart, $breakpoint) {
  @include respondFrom($breakpoint) {
    @include positionGridItem($rowStart, $columnStart, $rowEnd: $rowStart, $columnEnd: $columnStart);
  }
}

// Typography

// ToDo: eliminate llg-typography-... mixins, use explicit values instead

@mixin max-width($width: $metrics__content-width--3XL) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;
}

@mixin drop-shadow(
  $size: 0px $metrics__gap--S $metrics__gap--M #{-$metrics__gap--S},
  $color: $color__brand--base-dark-blue,
  $alpha: 0.2
) {
  box-shadow: $size rgba($color, $alpha);
}

@mixin llg-typography-base() {
  font-family: 'Open Sans', sans-serif;
}

@mixin llg-typography-normal() {
  @include llg-typography-base();
  font-weight: $typography__font-weight--semi-bold;
}

@mixin llg-typography-light() {
  @include llg-typography-base();
  font-weight: $typography__font-weight--regular;
}

@mixin ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin llg-typography-cta() {
  @include llg-typography-normal();
  font-size: $typography__font-size--S;
  color: $color__brand--primary-green;
}

@mixin llg-typography-header() {
  @include llg-typography-normal();
  font-size: $typography__font-size--1XL;
  color: $color__brand--base-dark-blue;
}

@mixin llg-typography-description() {
  @include llg-typography-normal();
  font-size: $typography__font-size--S;
  color: $color__brand--base-dark-blue;
}

@mixin llg-typography-business-value() {
  @include llg-typography-normal();
  font-size: $typography__font-size--S;
  color: $color__greys--60;
}

@mixin add-hover-effect($time: $transition__faster, $color: $color__ui--deeplink-cta) {
  transition: color $time;

  &:hover {
    color: $color;
  }
}

@mixin gradient-overlay($offset: 0, $height: 100%, $z-index: auto) {
  display: block;
  position: relative;
  margin-top: -$offset;
  z-index: $z-index;

  &:before {
    content: '';
    display: block;
    width: 100%;
    height: $height;
    background-image: linear-gradient(-12deg, rgba(0, 23, 35, 0) 38%, rgba(0, 32, 48, 0.7) 100%);
    background-position: left top;
    background-size: 100%;
  }
}

@mixin button($height: $metrics__button-height--M, $color: $color__ui--deeplink-cta) {
  @include text($typography__font-size--L, "semi-bold", "xl", center, "light");
  @include drop-shadow(0 $metrics__spread--L $metrics__spread--L #{-$metrics__spread--L}, $color, 0.5);
  display: block;
  margin: 0 auto;
  height: $height;
  background-color: $color;
  border-radius: $metrics__rounding--M;
  border: none;
  padding: $metrics__gap--M $metrics__gap--1XL;
  cursor: pointer;
  appearance: none;
  -webkit-appearance: none;
}

@mixin metrics__gaps($padding: 0, $margin: 0) {
  padding: $padding;
  margin: $margin;
}
