// ********************************************************
// TYPOGRAPHY
// ********************************************************

// ========================================
// Constants
// ========================================

// ========================================
// Mixins
// ========================================

// ========================================
// Functions
// ========================================




$typography__font-size--title: (
  "display": 2.5rem,
  "sub": 1rem,
  "level-1": 2.25rem,
  "level-2": 1.875rem,
  "level-3": 1.25rem,
  "level-4": 1.125rem,
  "level-5": 0.875rem
);

$typography__font-size--3XS: 0.6875rem; // 11px
$typography__font-size--2XS: 0.7500rem; //12px
$typography__font-size--1XS: 0.8125rem; //13px
$typography__font-size--S: 0.8750rem; //14px
$typography__font-size--M: 1.0000rem; //16px
$typography__font-size--L: 1.1250rem; //18px
$typography__font-size--1XL: 1.2500rem; //20px
$typography__font-size--2XL: 1.3750rem; //22px
$typography__font-size--3XL: 1.5000rem; //24px

// ========================================
// Font Weights
// ========================================

$typography__font-weight--regular: 400;
$typography__font-weight--semi-bold: 600;
$typography__font-weight--bold: 700;

// ========================================
// Line Heights //ToDo: refactor names
// ========================================

$typography__line-height--1XS: 1.125;
$typography__line-height--S: 1.2;
$typography__line-height--M: 1.3;
$typography__line-height--L: 1.4;
$typography__line-height--1XL: 1.5;
$typography__line-height--2XL: 1.6;

@mixin text(
  $font-size,
  $font-weight,
  $line-height,
  $text-align: left,
  $color: "mid"
) {
  $font-weights: (
    "regular": $typography__font-weight--regular,
    "semi-bold": $typography__font-weight--semi-bold,
    "bold": $typography__font-weight--bold
  );
  $line-heights: (
    "s": $typography__line-height--S, // 12 "thick"
    "m": $typography__line-height--M, // 13 "normal"
    "l": $typography__line-height--L, // 14
    "xl": $typography__line-height--1XL, // 15 "sparse"
    "xxl": $typography__line-height--2XL // 16 "rare"
  );
  $colors: (
    "white": $color__generics--white,
    "light": $color__greys--5,
    "pale": $color__greys--35,
    "mid": $color__greys--50,
    "dark": $color__brand--base-dark-blue,
    "cta": $color__ui--deeplink-cta,
    "link": $color__ui--link-blue,
    "warning": $color__ui--warning-error,
    "black": $color__generics--black
  );
  font-family: $typography__font-family--default;
  font-size: $font-size;
  font-weight: get_item_or_default($font-weights, $font-weight);
  line-height: get_item_or_default($line-heights, $line-height);
  text-align: $text-align;
  color: get_item_or_default($colors, $color);
}

@mixin heading(
  $level: display,
  $align: center,
  $scheme: light
) {
  $text-color: "";
  @if $scheme == light {
    $text-color: $color__brand--base-dark-blue;
  } @else if $scheme == dark {
    $text-color: $color__greys--5;
  } @else if $scheme == alternate {
    $text-color: $color__ui--validation;
  } @else {
    $text-color: $color__brand--base-dark-blue;
    @warn "Unknown color scheme '#{$scheme}' – 'light' applied instead.";
  }
  @if $align != center and $align != left {
    @warn "Unknown alignment mode '#{$align}' – 'center' applied instead.";
    $align: center
  }
  @if map_has_not_key($typography__font-size--title, $level) {
    @warn "Unknown level '#{$level}' – 'display' applied instead.";
    $level: display;
  }

  font-size: map_get($typography__font-size--title, $level);
  text-align: $align;
  color: $text-color;
  @if $level == display {
    font-weight: $typography__font-weight--semi-bold;
    line-height: $typography__line-height--S;
  }
  @if $level == sub {
    font-weight: $typography__font-weight--regular;
    line-height: $typography__line-height--2XL;
  }
  @if $level == level-1 {
    font-weight: $typography__font-weight--semi-bold;
    line-height: $typography__line-height--M;
  }
  @if $level == level-2 {
    font-weight: $typography__font-weight--semi-bold;
    line-height: $typography__line-height--S;
  }
  @if $level == level-3 {
    font-weight: $typography__font-weight--semi-bold;
    line-height: $typography__line-height--M;
  }
  @if $level == level-4 {
    font-weight: $typography__font-weight--semi-bold;
    line-height: $typography__line-height--L;
  }
  @if $level == level-5 {
    font-weight: $typography__font-weight--bold;
    line-height: $typography__line-height--L;
    text-transform: uppercase;
  }
}

@mixin link(
  $font-size: inherit,
  $font-weight: $typography__font-weight--regular,
  $line-height: $typography__line-height--1XL,
  $color: $color__ui--link-blue,
  $of-a: false
) {
  @if $of-a {
    a {
      @include link($font-size, $font-weight, $line-height, $color, false);
    }
  } @else {
    @include text($font-size, $font-weight, $line-height, left, $color);
    text-decoration: none;
    cursor: pointer;

    &:hover {
      text-decoration: underline;
    }
  }
}

@mixin unlink() {
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}
